{"version":3,"sources":["webpack://webpack-module-builder/./src/collapsible/src/scripts/collapsible.js"],"names":["docReady","fn","document","readyState","setTimeout","addEventListener"],"mappings":"YAuCA,SAASA,EAASC,GAEY,aAAxBC,SAASC,YAAqD,gBAAxBD,SAASC,WAEjDC,WAAWH,EAAI,GAEfC,SAASG,iBAAiB,mBAAoBJ,GAIlDD,EAASA,G","file":"../src/collapsible/dist/scripts/collapsible.min.js","sourcesContent":["function collapsible(){\n  document.addEventListener('click', (event) => {\n\n    const element = event.target;\n    const targetSelector = element.getAttribute('data-collapsible-target');\n\n    if (targetSelector !== null) {\n      toggleCollapse(targetSelector);\n    }\n  }, false);\n\n  const toggleCollapse = targetSelector => {\n    const targets = document.querySelectorAll('.' + targetSelector);\n    targets.forEach(target => {\n      if (!target.classList.contains('collapsible-show')) {\n        target.style.maxHeight = target.scrollHeight + 'px';\n      } else {\n        target.style.maxHeight = 0 + 'px';\n      }\n      target.classList.toggle('collapsible-show');\n    });\n  }\n\n  const closeOnClickOutsideElements = document.querySelectorAll('[data-close-on-click-outside]');\n  closeOnClickOutsideElements.forEach(element => hideOnClickOutside(element))\n\n  function hideOnClickOutside(element) {\n    const outsideClickListener = event => {\n      // Third checks if the element clicked isn't the toggler, which would result in a double click event that conflict each other.\n      if (!element.contains(event.target) && isVisible(element) && !element.classList.contains(event.target.getAttribute('data-collapsible-target'))) {\n        element.classList.remove('collapsible-show')\n        element.style.maxHeight = 0;\n      }\n    }\n    document.addEventListener('click', outsideClickListener)\n    const isVisible = elem => !!elem && !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length) // source (2018-03-11): https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js\n  }\n}\n\nfunction docReady(fn) {\n  // see if DOM is already available\n  if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n    // call on next available tick\n    setTimeout(fn, 1);\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", fn);\n  }\n}\n\ndocReady(docReady);"],"sourceRoot":""}